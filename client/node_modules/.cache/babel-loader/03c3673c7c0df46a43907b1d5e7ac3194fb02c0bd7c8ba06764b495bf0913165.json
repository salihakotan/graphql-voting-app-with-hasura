{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clara\\\\Desktop\\\\GitProjects\\\\GRAPHQL\\\\voting-app-hasura\\\\client\\\\src\\\\pages\\\\NewQuestion\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from \"./styles.module.css\";\nimport { useMutation } from \"@apollo/client\";\nimport { NEW_QUESTION_MUTATION } from \"./queries\";\nimport Loading from \"../../components/Loading\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialOptions = [{\n  title: \"\"\n}, {\n  title: \"\"\n}, {\n  title: \"\"\n}];\nfunction NewQuestion() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState(initialOptions);\n  const {\n    loading,\n    error,\n    data\n  } = useMutation(NEW_QUESTION_MUTATION);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  const handleChangeOption = ({\n    target\n  }) => {\n    const newArray = options;\n    newArray[target.id].title = target.value;\n    setOptions([...newArray]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questionsGrid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Question:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: question,\n        onChange: ({\n          target\n        }) => setQuestion(target.value),\n        placeholder: \"Type your question...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questionsGrid,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChangeOption,\n        id: index,\n        value: option.title,\n        placeholder: \"Type an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.questionsGrid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          width: \"250px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setOptions([...options, {\n            title: \"\"\n          }]),\n          children: \"New Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NewQuestion, \"9jC5xJ6aJewa20qwp5S3IkLyXtI=\", false, function () {\n  return [useMutation];\n});\n_c = NewQuestion;\nexport default NewQuestion;\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["React","useState","styles","useMutation","NEW_QUESTION_MUTATION","Loading","jsxDEV","_jsxDEV","Fragment","_Fragment","initialOptions","title","NewQuestion","_s","question","setQuestion","options","setOptions","loading","error","data","fileName","_jsxFileName","lineNumber","columnNumber","children","message","handleChangeOption","target","newArray","id","value","className","questionsGrid","onChange","placeholder","map","option","index","style","display","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Clara/Desktop/GitProjects/GRAPHQL/voting-app-hasura/client/src/pages/NewQuestion/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport styles from \"./styles.module.css\";\r\nimport { useMutation } from \"@apollo/client\";\r\nimport { NEW_QUESTION_MUTATION } from \"./queries\";\r\nimport Loading from \"../../components/Loading\";\r\n\r\nconst initialOptions = [\r\n  {\r\n    title: \"\",\r\n  },\r\n  {\r\n    title: \"\",\r\n  },\r\n  {\r\n    title: \"\",\r\n  },\r\n];\r\n\r\nfunction NewQuestion() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [options, setOptions] = useState(initialOptions);\r\n\r\n  const {loading,error,data} = useMutation(NEW_QUESTION_MUTATION)\r\n\r\n  \r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  }\r\n\r\n\r\n  const handleChangeOption = ({target}) => {\r\n        const newArray = options\r\n        newArray[target.id].title = target.value\r\n        setOptions([...newArray])\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>New Question</h1>\r\n      <br />\r\n\r\n      <div className={styles.questionsGrid}>\r\n        <label>\r\n          <b>Question:</b>{\" \"}\r\n        </label>\r\n        <input\r\n          value={question}\r\n          onChange={({ target }) => setQuestion(target.value)}\r\n          placeholder=\"Type your question...\"\r\n        />\r\n      </div>\r\n\r\n      <br />\r\n      <br />\r\n\r\n      {options.map((option, index) => (\r\n        <div className={styles.questionsGrid} key={index}>\r\n          <label>\r\n            <b>Option:</b>{\" \"}\r\n          </label>\r\n          <input onChange={handleChangeOption} id={index} value={option.title} placeholder=\"Type an option\" />\r\n        </div>\r\n      ))}\r\n\r\n      <br />\r\n      <div className={styles.questionsGrid}>\r\n        <div>{/* empty div for grid */}</div>\r\n        <div style={{ display: \"flex\", width: \"250px\" }}>\r\n          <button onClick={() => setOptions([...options, { title: \"\" }])}>\r\n            New Option\r\n          </button>\r\n          <button>Save</button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewQuestion;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}