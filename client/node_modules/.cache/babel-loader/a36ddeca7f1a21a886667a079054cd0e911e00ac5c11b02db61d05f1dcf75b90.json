{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clara\\\\Desktop\\\\GitProjects\\\\GRAPHQL\\\\voting-app-hasura\\\\client\\\\src\\\\pages\\\\NewQuestion\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialOptions = [{\n  title: \"\"\n}, {\n  title: \"\"\n}, {\n  title: \"\"\n}];\nfunction NewQuestion() {\n  _s();\n  const [question, SetQuestion] = useState('');\n  const [options, setOptions] = useState(initialOptions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: question,\n      onChange: ({\n        target\n      }) => SetQuestion(target.value),\n      placeholder: \"Type your question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Options:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 16\n      }, this), \"  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(NewQuestion, \"rcwf+gLlVZmJ3lzFjyKLqABAIiI=\");\n_c = NewQuestion;\nexport default NewQuestion;\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialOptions","title","NewQuestion","_s","question","SetQuestion","options","setOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Clara/Desktop/GitProjects/GRAPHQL/voting-app-hasura/client/src/pages/NewQuestion/index.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\n\r\nconst initialOptions = [\r\n    {\r\n        title:\"\"\r\n    }, \r\n    {\r\n        title:\"\"\r\n    },\r\n    {\r\n        title:\"\"\r\n    }\r\n]\r\n\r\nfunction NewQuestion() {\r\n\r\n\r\n    const [question,SetQuestion] = useState('')\r\n    const [options,setOptions] = useState(initialOptions)\r\n\r\n  return (\r\n    <>\r\n        <h1>New Question</h1>\r\n        <br/>\r\n\r\n        <label><b>Question:</b>  </label>\r\n        <input value={question} onChange={({target})=> SetQuestion(target.value)} placeholder='Type your question...'/>\r\n\r\n<br/><br/>\r\n        <label><b>Options:</b>  </label>\r\n\r\n\r\n    </> \r\n\r\n  )\r\n}\r\n\r\nexport default NewQuestion"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAIvC,MAAMC,cAAc,GAAG,CACnB;EACIC,KAAK,EAAC;AACV,CAAC,EACD;EACIA,KAAK,EAAC;AACV,CAAC,EACD;EACIA,KAAK,EAAC;AACV,CAAC,CACJ;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAGnB,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC3C,MAAM,CAACW,OAAO,EAACC,UAAU,CAAC,GAAGZ,QAAQ,CAACK,cAAc,CAAC;EAEvD,oBACEH,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELf,OAAA;MAAAW,QAAA,gBAAOX,OAAA;QAAAW,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACjCf,OAAA;MAAOgB,KAAK,EAAET,QAAS;MAACU,QAAQ,EAAEA,CAAC;QAACC;MAAM,CAAC,KAAIV,WAAW,CAACU,MAAM,CAACF,KAAK,CAAE;MAACG,WAAW,EAAC;IAAuB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEvHf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACFf,OAAA;MAAAW,QAAA,gBAAOX,OAAA;QAAAW,QAAA,EAAG;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,MAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA,eAGlC,CAAC;AAGP;AAACT,EAAA,CArBQD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAuBpB,eAAeA,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}