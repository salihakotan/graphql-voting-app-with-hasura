{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Clara\\\\Desktop\\\\GitProjects\\\\GRAPHQL\\\\voting-app-hasura\\\\client\\\\src\\\\pages\\\\NewQuestion\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialOptions = [{\n  title: \"\"\n}, {\n  title: \"\"\n}, {\n  title: \"\"\n}];\nfunction NewQuestion() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [options, setOptions] = useState(initialOptions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: question,\n      onChange: ({\n        target\n      }) => setQuestion(target.value),\n      placeholder: \"Type your question...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Option:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: option.title,\n        placeholder: \"Type an option\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Add option\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(NewQuestion, \"omtxXdNg/MSDTRVjX76hc54j+zo=\");\n_c = NewQuestion;\nexport default NewQuestion;\nvar _c;\n$RefreshReg$(_c, \"NewQuestion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","initialOptions","title","NewQuestion","_s","question","setQuestion","options","setOptions","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","map","option","index","_c","$RefreshReg$"],"sources":["C:/Users/Clara/Desktop/GitProjects/GRAPHQL/voting-app-hasura/client/src/pages/NewQuestion/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst initialOptions = [\r\n  {\r\n    title: \"\",\r\n  },\r\n  {\r\n    title: \"\",\r\n  },\r\n  {\r\n    title: \"\",\r\n  },\r\n];\r\n\r\nfunction NewQuestion() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [options, setOptions] = useState(initialOptions);\r\n\r\n  return (\r\n    <>\r\n      <h1>New Question</h1>\r\n      <br />\r\n\r\n      <label>\r\n        <b>Question:</b>{\" \"}\r\n      </label>\r\n      <input\r\n        value={question}\r\n        onChange={({ target }) => setQuestion(target.value)}\r\n        placeholder=\"Type your question...\"\r\n      />\r\n\r\n      <br />\r\n      <br />\r\n      \r\n\r\n      {options.map((option, index) => (\r\n        <div key={index}>\r\n          <label>\r\n            <b>Option:</b>{\" \"}\r\n          </label>\r\n          <input\r\n            value={option.title}\r\n            placeholder=\"Type an option\"\r\n          />\r\n        </div>\r\n      ))}\r\n\r\n\r\n<br/>\r\n      <button>Add option</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewQuestion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,cAAc,GAAG,CACrB;EACEC,KAAK,EAAE;AACT,CAAC,EACD;EACEA,KAAK,EAAE;AACT,CAAC,EACD;EACEA,KAAK,EAAE;AACT,CAAC,CACF;AAED,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACK,cAAc,CAAC;EAEtD,oBACEH,OAAA,CAAAE,SAAA;IAAAS,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENf,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,EAAG;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAAC,GAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACRf,OAAA;MACEgB,KAAK,EAAET,QAAS;MAChBU,QAAQ,EAAEA,CAAC;QAAEC;MAAO,CAAC,KAAKV,WAAW,CAACU,MAAM,CAACF,KAAK,CAAE;MACpDG,WAAW,EAAC;IAAuB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eAEFf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAGLN,OAAO,CAACW,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBtB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,gBACEX,OAAA;UAAAW,QAAA,EAAG;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,EAAC,GAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CAAC,eACRf,OAAA;QACEgB,KAAK,EAAEK,MAAM,CAACjB,KAAM;QACpBe,WAAW,EAAC;MAAgB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA,GAPMO,KAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC,eAGRf,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACCf,OAAA;MAAAW,QAAA,EAAQ;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC3B,CAAC;AAEP;AAACT,EAAA,CAvCQD,WAAW;AAAAkB,EAAA,GAAXlB,WAAW;AAyCpB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}